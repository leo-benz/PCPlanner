/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import kotlinx.serialization.*

/**
 * Type of holiday
 *
 * Values: Public,Bank,National,Regional,Local,School,BackToSchool,EndOfLessons
 */
@Serializable
enum class HolidayType(val value: kotlin.String) {

    @SerialName(value = "Public")
    Public("Public"),

    @SerialName(value = "Bank")
    Bank("Bank"),

    @SerialName(value = "National")
    National("National"),

    @SerialName(value = "Regional")
    Regional("Regional"),

    @SerialName(value = "Local")
    Local("Local"),

    @SerialName(value = "School")
    School("School"),

    @SerialName(value = "BackToSchool")
    BackToSchool("BackToSchool"),

    @SerialName(value = "EndOfLessons")
    EndOfLessons("EndOfLessons");

    /**
     * Override [toString()] to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): kotlin.String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is HolidayType) "$data" else null

        /**
         * Returns a valid [HolidayType] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): HolidayType? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

