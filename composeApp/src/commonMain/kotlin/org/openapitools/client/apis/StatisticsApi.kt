/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.apis

import org.openapitools.client.models.StatisticsResponse

import org.openapitools.client.infrastructure.*
import io.ktor.client.HttpClient
import io.ktor.client.HttpClientConfig
import io.ktor.client.request.forms.formData
import io.ktor.client.engine.HttpClientEngine
import kotlinx.serialization.json.Json
import io.ktor.http.ParametersBuilder
import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

open class StatisticsApi : ApiClient {

    constructor(
        baseUrl: String = ApiClient.BASE_URL,
        httpClientEngine: HttpClientEngine? = null,
        httpClientConfig: ((HttpClientConfig<*>) -> Unit)? = null,
        jsonSerializer: Json = ApiClient.JSON_DEFAULT
    ) : super(baseUrl = baseUrl, httpClientEngine = httpClientEngine, httpClientConfig = httpClientConfig, jsonBlock = jsonSerializer)

    constructor(
        baseUrl: String,
        httpClient: HttpClient
    ): super(baseUrl = baseUrl, httpClient = httpClient)

    /**
     * Returns statistical data about public holidays for a given country.
     * 
     * @param countryIsoCode ISO 3166-1 code of the country
     * @param subdivisionCode Code of the subdivision or empty (optional)
     * @return StatisticsResponse
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun statisticsPublicHolidaysGet(countryIsoCode: kotlin.String, subdivisionCode: kotlin.String? = null): HttpResponse<StatisticsResponse> {

        val localVariableAuthNames = listOf<String>()

        val localVariableBody = 
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
        countryIsoCode?.apply { localVariableQuery["countryIsoCode"] = listOf("$countryIsoCode") }
        subdivisionCode?.apply { localVariableQuery["subdivisionCode"] = listOf("$subdivisionCode") }
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/Statistics/PublicHolidays",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
        )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }


    /**
     * Returns statistical data about school holidays for a given country
     * 
     * @param countryIsoCode ISO 3166-1 code of the country
     * @param subdivisionCode Code of the subdivision or empty (optional)
     * @return StatisticsResponse
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun statisticsSchoolHolidaysGet(countryIsoCode: kotlin.String, subdivisionCode: kotlin.String? = null): HttpResponse<StatisticsResponse> {

        val localVariableAuthNames = listOf<String>()

        val localVariableBody = 
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
        countryIsoCode?.apply { localVariableQuery["countryIsoCode"] = listOf("$countryIsoCode") }
        subdivisionCode?.apply { localVariableQuery["subdivisionCode"] = listOf("$subdivisionCode") }
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/Statistics/SchoolHolidays",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
        )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }


}
